apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'com.github.johnrengelman.shadow'

version = '0.1.0'
sourceCompatibility = 1.8
targetCompatibility = 1.8

// emulate scope 'provided' in Gradle - see http://blog.codeaholics.org/2012/emulating-mavens-provided-scope-in-gradle/
configurations {
    provided
}

sourceSets {
    main.compileClasspath += configurations.provided
    test.compileClasspath += configurations.provided
    test.runtimeClasspath += configurations.provided
}

repositories {
    mavenCentral()
}

ext.jmhVersion = '1.0'
ext.jolVersion = '0.1'

dependencies {
    compile "org.openjdk.jmh:jmh-core:$jmhVersion"
    provided "org.openjdk.jmh:jmh-generator-annprocess:$jmhVersion"
    compile "org.openjdk.jol:jol-core:$jolVersion"
}

idea {
    project {
        languageLevel = '1.8'
    }
}

idea {
    module {
        // support provided scope in IDEA:
        // See also http://www.gradle.org/docs/current/dsl/org.gradle.plugins.ide.idea.model.IdeaModule.html
        scopes.PROVIDED.plus += [configurations.provided]
        //avoid duplicate entries in provided scope (i.e. jmh-core)
        //scopes.PROVIDED.minus += [configurations.compile]
        downloadSources = true
    }
}

//see https://github.com/johnrengelman/shadow
buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:1.0.2'
    }
}

jar {
    manifest {
        attributes("Main-Class": "org.openjdk.jmh.Main")
    }
}